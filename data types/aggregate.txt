HSET movie:1 movie_name "Star Wars: Episode V - The Empire Strikes Back" plot "After the Rebels are brutally overpowered by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda, while his friends are pursued by Darth Vader and a bounty hunter named Boba Fett all over the galaxy." release_year 1980 category "Action" rating 8.7 votes 1127635 imdb_id tt0080684

> HSET movie:2 movie_name "The Godfather" plot "The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son." release_year 1972 category "Drama" rating 9.2 votes 1563839 imdb_id tt0068646

> HSET movie:3 movie_name "Heat" plot "A group of professional bank robbers start to feel the heat from police when they unknowingly leave a clue at their latest heist." release_year 1995 category "Thriller" rating 8.2 votes 559490 imdb_id tt0113277

> HSET movie:4 movie_name "Star Wars: Episode VI - Return of the Jedi" category "Action" votes 906260 rating 8.3 release_year 1983  plot "The Rebels dispatch to Endor to destroy the second Empire's Death Star." imdb_id "tt0086190"



CODE: Creating an index
ft.create idx:movie ON hash PREFIX 1 "movie" SCHEMA 
                                    movie_name TEXT SORTABLE 
                                    release_year NUMERIC SORTABLE 
                                    rating NUMERIC SORTABLE 
                                    category TAG SORTABLE


ft.search idx:movie "war"

ft.search idx:movie "war -jedi"

ft.search idx:movie "war" RETURN 2 movie_name release_year

ft.search idx:movie "war" RETURN 3 movie_name release_year category

ft.search idx:movie "@movie_name:war" RETURN 3 movie_name release_year category

ft.search idx:movie "@category:{Thriller}" return 2 movie_name release_year

ft.search idx:movie "@category:{Thriller}" return 3 movie_name release_year category

ft.search idx:movie "@category:{Action}" return 3 movie_name release_year category

ft.search idx:movie "@category:{Thriller|Action}" return 3 movie_name release_year category

ft.search idx:movie "@category:{Thriller|Action} @movie_name:-jedi" return 3 movie_name release_year category







CODE: fuzzy logic and search by value
ft.search idx:movie "%gdfather%" return 2 movie_name release_year

CODE: Value range searches
ft.search idx:movie "@release_year:[1970 1980]" return 2 movie_name release_year

ft.search idx:movie * FILTER release_year 1970 1980 return 2 movie_name release_year
//* parametres tüm belgeler üzerinde arama yapılacağını belirtir.

ft.search idx:movie "@release_year:[1970 (1980]" return 2 movie_name release_year
//release_year 1970 ile 1980'e kadar olan filmleri getirir.

ft.search idx:movie "@release_year:[1970 (2000]" return 2 movie_name release_year

ft.search idx:movie "@release_year:[1970 (1995]" return 2 movie_name release_year




CODE: Counting total records/documents
ft.search idx:movie "*" LIMIT 0 0


CODE: Insert, Update, Delete and Expire Documents
ft.search idx:movie "*" LIMIT 0 0


CODE: Manage Indexes
ft._list

ft.info "idx:movie"

ft.alter idx:movie SCHEMA ADD plot TEXT WEIGHT 0.5

ft._list

ft.info idx:movie

hgetall movie:1

ft.search idx:movie "Yoda" return 2 movie_name release_year

ft.search idx:movie "Yoda @category:{Action}" return 2 movie_name release_year

ft.dropindex idx:movie

ft._list

keys *

scan 0 MATCH movie:*




CODE: Creating Indexes on movies database
ft._list

hgetall movie:1

ft.create idx:movie ON hash PREFIX 1 "movie:" SCHEMA movie_name TEXT SORTABLE release_year NUMERIC SORTABLE category TAG SORTABLE rating NUMERIC SORTABLE plot TEXT

ft.info idx:movie

hgetall actor:1

ft.create idx:actor ON hash PREFIX 1 "actor:" SCHEMA first_name TEXT SORTABLE last_name TEXT SORTABLE date_of_birth NUMERIC SORTABLE

ft.info idx:actor

hgetall theater:1

ft.create idx:theater ON hash PREFIX 1 "theater:" SCHEMA name TEXT SORTABLE location GEO

ft.info idx:theater

hgetall user:1

ft.create idx:user ON hash PREFIX 1 "user:" SCHEMA gender TAG country TAG SORTABLE last_login NUMERIC SORTABLE location GEO

ft.info idx:user





CODE: Using @fieldname with and without contains
ft.search idx:movie "heat" return 2 movie_name release_year

ft.search idx:movie "heat" return 3 movie_name release_year plot

ft.search idx:movie "@movie_name:heat" return 3 movie_name release_year plot

ft.search idx:movie "@movie_name:(heat -california)" return 3 movie_name release_year plot

ft.search idx:movie "@movie_name:(heat -women)" return 3 movie_name release_year plot




CODE: Search with OR criteria
ft.search idx:movie "@movie_name:(heat)  @category:{Drama|Comedy} " RETURN 3 movie_name release_year category

ft.search idx:movie "@movie_name:(heat) | @category:{Drama|Comedy} " RETURN 3 movie_name release_year category




CODE: Search condition1 AND (condition2 OR condition3)
ft.search idx:movie "@category:{Mystery}" return 3 movie_name release_year category



ft.search idx:movie "@category:{Mystery|Thriller}" return 3 movie_name release_year category



ft.search idx:movie "@category:{Mystery|Thriller} @release_year:[2014 2014]" return 3 movie_name release_year category



ft.search idx:movie "@category:{Mystery|Thriller} @release_year:[2014 2014] @release_year:[2018 2018]" return 3 movie_name release_year category



ft.search idx:movie "@category:{Mystery|Thriller} @release_year:[2014 2014] | @release_year:[2018 2018]" return 3 movie_name release_year category



ft.search idx:movie "@category:{Mystery|Thriller} (@release_year:[2014 2014] | @release_year:[2018 2018])" return 3 movie_name release_year category



CODE: Sort data with SORTBY
ft.search idx:movie "@category:{Action}" return 2 movie_name release_year



ft.search idx:movie "@category:{Action}" SORTBY release_year return 2 movie_name release_year



ft.search idx:movie "@category:{Action}" SORTBY release_year ASC return 2 movie_name release_year



ft.search idx:movie "@category:{Action}" SORTBY release_year DESC return 2 movie_name release_year



ft.search idx:movie "@category:{Action}" SORTBY plot DESC return 2 movie_name release_year



ft.search idx:movie "@category:{Action}" SORTBY plot DESC return 3 movie_name release_year plot



ft.search idx:movie "@category:{Action}" SORTBY plot ASC return 3 movie_name release_year plot



ft.info idx:movie



ft.search idx:movie "@category:{Action}" SORTBY plot DESC return 3 movie_name release_year plot


CODE: Limiting results using LIMIT
ft.search idx:actor "*" limit 0 1

ft.search idx:actor "*" limit 0 10

ft.search idx:movie "@category:{Action}" sortby release_year DESC



ft.search idx:movie "@category:{Action}" sortby release_year DESC limit 0 100

ft.search idx:movie "@category:{Action}" limit 0 100 sortby release_year DESC

ft.search idx:movie "@category:{Action}" limit 100 100 sortby release_year DESC



ft.search idx:movie "@category:{Action}" limit 200 100 sortby release_year DESC





CODE: Grouping data
ft.search idx:movie "*" limit 0 0

ft.search idx:user "*" limit 0 0

ft.search idx:actor "*" limit 0 0

ft.aggregate idx:movie "*" groupby 1 @release_year

ft.aggregate idx:movie "*" groupby 1 @category

ft.aggregate idx:movie "*" groupby 1 @release_year @category

ft.aggregate idx:movie "*" groupby 2 @release_year @category

ft.aggregate idx:movie "*" groupby 2 @category @release_year

ft.aggregate idx:movie "*" groupby 2 @release_year @category

ft.aggregate idx:movie "*" groupby 2 @category @release_year

ft.aggregate idx:movie "*" groupby 2 @release_year @category

ft.aggregate idx:movie "*" groupby 1 @release_year

ft.aggregate idx:movie "*" groupby 1 @release_year reduce count 0

ft.aggregate idx:movie "*" groupby 1 @release_year reduce count 0 as total_num_movies

ft.aggregate idx:movie "heat" groupby 1 @release_year reduce count 0 as total_num_movies

ft.aggregate idx:movie "*" groupby 1 @release_year reduce count 0 as total_num_movies

ft.aggregate idx:movie "*" groupby 1 @release_year reduce count 0 as total_num_movies SORTBY 1 @release_year

ft.aggregate idx:movie "*" groupby 1 @release_year reduce count 0 as total_num_movies SORTBY 1 @release_year DESC

ft.aggregate idx:movie "*" groupby 1 @release_year reduce count 0 as total_num_movies SORTBY 1 @release_year ASC

ft.aggregate idx:movie "*" groupby 1 @release_year reduce count 0 as total_num_movies SORTBY 2 @release_year ASC

ft.aggregate idx:movie "*" groupby 1 @release_year reduce count 0 as total_num_movies SORTBY 2 @release_year DESC




CODE: Grouping, reducing and sorting data
ft.aggregate idx:movie "*" groupby 1 @release_year reduce count 0 as total_num_movies SORTBY 2 @release_year ASC

ft.aggregate idx:movie "*" groupby 1 @release_year reduce count 0 as total_num_movies SORTBY 2 @release_year DESC

ft.search idx:movie "*" groupby 1 @category

ft.aggregate idx:movie "*" groupby 1 @category

ft.aggregate idx:movie "*" groupby 1 @category sortby @category DESC

ft.aggregate idx:movie "*" groupby 1 @category sortby 2 @category DESC

ft.aggregate idx:movie "*" groupby 1 @category sortby 1 @category

ft.aggregate idx:movie "*" groupby 1 @category sortby 2 @category DESC

ft.aggregate idx:movie "*" groupby 1 @category reduce count 0 sortby 2 @category DESC

ft.aggregate idx:movie "*" groupby 1 @category reduce count 0 as total_num_movies sortby 2 @category DESC

ft.aggregate idx:movie "*" groupby 1 @category reduce count 0 as total_num_movies sortby 2 @category

ft.aggregate idx:movie "*" groupby 1 @category reduce count 0 as total_num_movies sortby 1 @category





















